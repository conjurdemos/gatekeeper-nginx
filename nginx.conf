worker_processes  1;

error_log logs/error.log;
error_log logs/verbose.log debug;

pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;


    upstream service {
      server localhost:4567;
    }


    server {
      listen 80;

      # Set some conjur config variables
      set $conjur_account 'sandbox';
      set $conjur_stack 'v4';

      # Set up an internal location to proxy to the conjur authz service
      location ~* /conjur/authz(/.*) {
        # Use google's dns to resolve our host
        resolver 8.8.8.8;

        internal;
        # Turn off passing request headers and body (we'll set the important ones 
        # ourselves)
        proxy_pass_request_headers off;
        proxy_pass_request_body off;

        # Nginx docs say you need this when proxy_pass_request_body is off.
        proxy_set_header Content-Length 0;

        # Pass along the client's authorization header.
        proxy_set_header Authorization $http_authorization;

        # pass to https://authz-v4-conjur.herokuapp.com/...
        proxy_pass https://authz-v4-conjur.herokuapp.com$1;
      }

      location / {
        access_by_lua_file '/home/vagrant/access.lua';
        proxy_pass http://service;
      }
    }
}
